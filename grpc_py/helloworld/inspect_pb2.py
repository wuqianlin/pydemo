# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: inspect.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='inspect.proto',
  package='inspect',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\rinspect.proto\x12\x07inspect\",\n\x10PortCheckRequest\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\r\" \n\x0ePortCheckReply\x12\x0e\n\x06result\x18\x01 \x01(\x08\x32U\n\rSystemInspect\x12\x44\n\x0cport_is_open\x12\x19.inspect.PortCheckRequest\x1a\x17.inspect.PortCheckReply\"\x00\x62\x06proto3')
)




_PORTCHECKREQUEST = _descriptor.Descriptor(
  name='PortCheckRequest',
  full_name='inspect.PortCheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='inspect.PortCheckRequest.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='inspect.PortCheckRequest.port', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=70,
)


_PORTCHECKREPLY = _descriptor.Descriptor(
  name='PortCheckReply',
  full_name='inspect.PortCheckReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='inspect.PortCheckReply.result', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=104,
)

DESCRIPTOR.message_types_by_name['PortCheckRequest'] = _PORTCHECKREQUEST
DESCRIPTOR.message_types_by_name['PortCheckReply'] = _PORTCHECKREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PortCheckRequest = _reflection.GeneratedProtocolMessageType('PortCheckRequest', (_message.Message,), {
  'DESCRIPTOR' : _PORTCHECKREQUEST,
  '__module__' : 'inspect_pb2'
  # @@protoc_insertion_point(class_scope:inspect.PortCheckRequest)
  })
_sym_db.RegisterMessage(PortCheckRequest)

PortCheckReply = _reflection.GeneratedProtocolMessageType('PortCheckReply', (_message.Message,), {
  'DESCRIPTOR' : _PORTCHECKREPLY,
  '__module__' : 'inspect_pb2'
  # @@protoc_insertion_point(class_scope:inspect.PortCheckReply)
  })
_sym_db.RegisterMessage(PortCheckReply)



_SYSTEMINSPECT = _descriptor.ServiceDescriptor(
  name='SystemInspect',
  full_name='inspect.SystemInspect',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=106,
  serialized_end=191,
  methods=[
  _descriptor.MethodDescriptor(
    name='port_is_open',
    full_name='inspect.SystemInspect.port_is_open',
    index=0,
    containing_service=None,
    input_type=_PORTCHECKREQUEST,
    output_type=_PORTCHECKREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SYSTEMINSPECT)

DESCRIPTOR.services_by_name['SystemInspect'] = _SYSTEMINSPECT

# @@protoc_insertion_point(module_scope)
